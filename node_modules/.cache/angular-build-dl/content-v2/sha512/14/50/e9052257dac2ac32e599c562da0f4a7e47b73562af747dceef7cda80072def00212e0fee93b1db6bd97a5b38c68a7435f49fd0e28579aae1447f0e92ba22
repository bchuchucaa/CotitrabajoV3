{"version":3,"sources":["webpack:///src/app/components/login/login.page.html","webpack:///src/app/components/login/login-routing.module.ts","webpack:///src/app/components/login/login.module.ts","webpack:///src/app/components/login/login.page.scss","webpack:///src/app/components/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","authSvc","email","password","login","value","user","isVerified","isEmailVerified","console","log","loginGoogle","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAJlC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAT3B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,4EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,qDAAD;AAPN,OAAT,CAS2B,GAAfD,eAAe,CAAf;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,SAAS;AAEpB,2BAAoBC,OAApB,EAAyC;AAAA;;AAArB,eAAAA,OAAA,GAAAA,OAAA;AAAwB;;AAFxB;AAAA;AAAA,qCAIT,CACV;AALmB;AAAA;AAAA,kCAMNC,KANM,EAMAC,QANA,EAMQ;;;;;;;;;AAEX,6BAAM,KAAKF,OAAL,CAAaG,KAAb,CAAmBF,KAAK,CAACG,KAAzB,EAA+BF,QAAQ,CAACE,KAAxC,CAAN;;;AAAPC,0B;;AACN,0BAAGA,IAAH,EAAQ;AACN;AACMC,kCAFA,GAEa,KAAKN,OAAL,CAAaO,eAAb,CAA6BF,IAA7B,CAFb;AAGNG,+BAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,UAAjC;AACD;;;;;;;;AAEDE,6BAAO,CAACC,GAAR,CAAY,QAAZ;;;;;;;;;AAEH;AAjBmB;AAAA;AAAA,0CAmBC;;;;;;;;;AAEF,6BAAM,KAAKT,OAAL,CAAaU,WAAb,EAAN;;;AAAPL,0B;;AACN,0BAAGA,IAAH,EAAQ;AACNG,+BAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBJ,IAAxB;AAED;;;;;;;;AAEDG,6BAAO,CAACC,GAAR;;;;;;;;;AAEH;AA7BiB;;AAAA;AAAA,S;;;;gBARb;;;;AAQIV,eAAS,6DALrB,gEAAU;AACTY,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,uGAFS;;;;AAAA,OAAV,CAKqB,GAATb,SAAS,CAAT","file":"components-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Login User</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form>\\n        <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input type=\\\"text\\\" #email required></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Password</ion-label>\\n            <ion-input type=\\\"password\\\" #password required></ion-input>\\n        </ion-item>\\n        <ion-row>\\n            <ion-col>\\n                <ion-button type=\\\"submit\\\" (click)=\\\"onLogin(email, password)\\\" expand=\\\"block\\\">Login</ion-button>\\n            </ion-col>\\n        </ion-row>\\n        <span class=\\\"divider line one-line\\\">or</span>\\n        <ion-col>\\n            <ion-button type=\\\"submit\\\" color=\\\"danger\\\" (click)=\\\"onLoginGoogle(email,password)\\\" expand=\\\"block\\\">Login with Google</ion-button>\\n        </ion-col>\\n    </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { async } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private authSvc:AuthService) { }\n\n  ngOnInit() {\n  }\n  async onLogin(email,password){\n    try {\n      const user = await this.authSvc.login(email.value,password.value);\n      if(user){\n        //Todo:checkEmail\n        const isVerified = this.authSvc.isEmailVerified(user);\n        console.log(\"email verified ? \", isVerified);\n      }\n    } catch (error) {\n      console.log('errror',error);\n    }\n  }\n\n    async onLoginGoogle(){\n      try {\n        const user = await this.authSvc.loginGoogle();\n        if(user){\n          console.log(\"USER  -> \",user);\n\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  \n\n}\n"]}