{"version":3,"sources":["./src/app/components/verify-email/verify-email.page.html","./src/app/components/verify-email/verify-email-routing.module.ts","./src/app/components/verify-email/verify-email.module.ts","./src/app/components/verify-email/verify-email.page.scss","./src/app/components/verify-email/verify-email.page.ts","./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"components-verify-email-verify-email-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Verifica tu correo</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"user$ | async as user\\\">\\n    <ion-row>\\n        <ion-col>Gracias por registrarte :)</ion-col>\\n        <p>Te enviamos un correo de verificacion </p>\\n        <p>Por favor verifica tu correo clickeando sobre este link</p>\\n    </ion-row>\\n    <ion-row>\\n        <ion-col>\\n            <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\" onSendEmail() \\\">Reenviar el correo de verificacion</ion-button>\\n        </ion-col>\\n    </ion-row>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerifyEmailPage } from './verify-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerifyEmailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VerifyEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerifyEmailPageRoutingModule } from './verify-email-routing.module';\n\nimport { VerifyEmailPage } from './verify-email.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VerifyEmailPageRoutingModule\n  ],\n  declarations: [VerifyEmailPage]\n})\nexport class VerifyEmailPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdmVyaWZ5LWVtYWlsL3ZlcmlmeS1lbWFpbC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport auth from 'firebase/app';\nimport { User } from 'src/app/shared/user.interface';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.page.html',\n  styleUrls: ['./verify-email.page.scss'],\n})\nexport class VerifyEmailPage implements OnInit {\n  user$:Observable<User> = this.authService.afaAuth.user;\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit() {\n  }\n  async onSendEmail():Promise<void>{\n    try {\n     await this.authService.sendVerificationEmail();\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ngOnDestroy(){\n    this.authService.logout();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user.interface';\nimport { AngularFireAuth} from '@angular/fire/auth';\nimport auth from 'firebase/app';\n\nimport {AngularFirestore,AngularFirestoreDocument} from '@angular/fire/firestore'\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user$:Observable<User>;\n\n  constructor(public afaAuth:AngularFireAuth, private afs:AngularFirestore) { \n    this.user$ = this.afaAuth.authState.pipe(\n      switchMap((user) => {\n        if(user){\n          this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        }\n        return of(null);\n      })\n    );\n  }\n\n  async loginGoogle():Promise<User>{\n    try {\n      const {user} = await this.afaAuth.signInWithPopup(new auth.auth.GoogleAuthProvider());\n      return user;\n    } catch (error) {\n      console.log('error ',error);\n    }\n\n  }\n\n  async resetPassword(email:string):Promise<void>{\n      \n    try {\n      return this.afaAuth.sendPasswordResetEmail(email);   \n    } catch (error) {\n      console.log('error ',error);\n    }\n  }\n\n  \n  async login(email:string,password:string):Promise<User>{\n    try {\n      const {user}= await this.afaAuth.signInWithEmailAndPassword(email,password);\n      this.updateUserData(user);\n      return user;\n    } catch (error) {\n      console.log('Error -> ',error);\n    }\n\n  }\n  async register(email: string, password: string): Promise<User> {\n    try {\n      const { user } = await this.afaAuth.createUserWithEmailAndPassword(email, password);\n      await this.sendVerificationEmail();\n      return user;\n    } catch (error) {\n      console.log('Error->', error);\n    }\n  }\n  async sendVerificationEmail():Promise<void>{\n    try {\n      return (await this.afaAuth.currentUser).sendEmailVerification();\n    } catch (error) {\n      console.log('Error ', error);\n    }\n    \n\n  }\n  isEmailVerified(user: User):boolean{\n    return user.emailVerified === true ? true : false;\n  }\n  async logout():Promise<void>{\n    try {\n      await this.afaAuth.signOut();\n      \n    } catch (error) {\n      console.log('Error ->',error);\n    }\n\n  }\n  private updateUserData(user:User){\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`);\n    const data:User = {\n      uid:user.uid,\n      email:user.email,\n      emailVerified:user.emailVerified,\n      displayName:user.displayName,\n    };\n    return userRef.set(data, {merge:true});\n  }\n}\n\n"],"sourceRoot":"webpack:///"}