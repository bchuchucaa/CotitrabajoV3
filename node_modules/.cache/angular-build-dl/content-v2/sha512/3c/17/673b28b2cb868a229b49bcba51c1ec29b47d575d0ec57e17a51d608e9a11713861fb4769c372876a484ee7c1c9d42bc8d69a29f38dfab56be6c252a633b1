{"version":3,"sources":["./src/app/components/forgot-password/forgot-password.page.html","./src/app/components/forgot-password/forgot-password-routing.module.ts","./src/app/components/forgot-password/forgot-password.module.ts","./src/app/components/forgot-password/forgot-password.page.scss","./src/app/components/forgot-password/forgot-password.page.ts","./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"components-forgot-password-forgot-password-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Actualizar password</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form>\\n        <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input type=\\\"text\\\" #email required></ion-input>\\n        </ion-item>\\n        <ion-row>\\n            <ion-col>\\n                <ion-button type=\\\"submit\\\" (click)=\\\"onResetPassword(email)\\\" expand=\\\"block\\\">Cambiar contrasena</ion-button>\\n            </ion-col>\\n        </ion-row>\\n    </form>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n\n  constructor(private authService:AuthService,private router:Router) { }\n\n  ngOnInit() {\n  }\n  async onResetPassword(email){\n    console.log(email);\n    try {\n      await this.authService.resetPassword(email.value);\n      this.router.navigate(['/login']);\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user.interface';\nimport { AngularFireAuth} from '@angular/fire/auth';\nimport auth from 'firebase/app';\n\nimport {AngularFirestore,AngularFirestoreDocument} from '@angular/fire/firestore'\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user$:Observable<User>;\n\n  constructor(public afaAuth:AngularFireAuth, private afs:AngularFirestore) { \n    this.user$ = this.afaAuth.authState.pipe(\n      switchMap((user) => {\n        if(user){\n          this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        }\n        return of(null);\n      })\n    );\n  }\n\n  async loginGoogle():Promise<User>{\n    try {\n      const {user} = await this.afaAuth.signInWithPopup(new auth.auth.GoogleAuthProvider());\n      return user;\n    } catch (error) {\n      console.log('error ',error);\n    }\n\n  }\n\n  async resetPassword(email:string):Promise<void>{\n      \n    try {\n      return this.afaAuth.sendPasswordResetEmail(email);   \n    } catch (error) {\n      console.log('error ',error);\n    }\n  }\n\n  \n  async login(email:string,password:string):Promise<User>{\n    try {\n      const {user}= await this.afaAuth.signInWithEmailAndPassword(email,password);\n      this.updateUserData(user);\n      return user;\n    } catch (error) {\n      console.log('Error -> ',error);\n    }\n\n  }\n  async register(email: string, password: string): Promise<User> {\n    try {\n      const { user } = await this.afaAuth.createUserWithEmailAndPassword(email, password);\n      await this.sendVerificationEmail();\n      return user;\n    } catch (error) {\n      console.log('Error->', error);\n    }\n  }\n  async sendVerificationEmail():Promise<void>{\n    try {\n      return (await this.afaAuth.currentUser).sendEmailVerification();\n    } catch (error) {\n      console.log('Error ', error);\n    }\n    \n\n  }\n  isEmailVerified(user: User):boolean{\n    return user.emailVerified === true ? true : false;\n  }\n  async logout():Promise<void>{\n    try {\n      await this.afaAuth.signOut();\n      \n    } catch (error) {\n      console.log('Error ->',error);\n    }\n\n  }\n  private updateUserData(user:User){\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`);\n    const data:User = {\n      uid:user.uid,\n      email:user.email,\n      emailVerified:user.emailVerified,\n      displayName:user.displayName,\n    };\n    return userRef.set(data, {merge:true});\n  }\n}\n\n"],"sourceRoot":"webpack:///"}