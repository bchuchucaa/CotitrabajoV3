{"version":3,"sources":["webpack:///src/app/components/forgot-password/forgot-password.page.html","webpack:///src/app/components/forgot-password/forgot-password-routing.module.ts","webpack:///src/app/components/forgot-password/forgot-password.module.ts","webpack:///src/app/components/forgot-password/forgot-password.page.scss","webpack:///src/app/components/forgot-password/forgot-password.page.ts","webpack:///src/app/services/auth.service.ts"],"names":["routes","path","component","ForgotPasswordPageRoutingModule","imports","forChild","exports","ForgotPasswordPageModule","declarations","ForgotPasswordPage","authService","router","email","console","log","resetPassword","value","navigate","selector","template","AuthService","afaAuth","afs","user$","authState","pipe","user","doc","uid","valueChanges","signInWithPopup","auth","GoogleAuthProvider","sendPasswordResetEmail","password","signInWithEmailAndPassword","updateUserData","createUserWithEmailAndPassword","sendVerificationEmail","currentUser","sendEmailVerification","emailVerified","signOut","userRef","data","displayName","set","merge","providedIn"],"mappings":"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","file":"components-forgot-password-forgot-password-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Actualizar password</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form>\\n        <ion-item lines=\\\"full\\\">\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input type=\\\"text\\\" #email required></ion-input>\\n        </ion-item>\\n        <ion-row>\\n            <ion-col>\\n                <ion-button type=\\\"submit\\\" (click)=\\\"onResetPassword(email)\\\" expand=\\\"block\\\">Cambiar contrasena</ion-button>\\n            </ion-col>\\n        </ion-row>\\n    </form>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPageRoutingModule } from './forgot-password-routing.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ForgotPasswordPageRoutingModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit {\n\n  constructor(private authService:AuthService,private router:Router) { }\n\n  ngOnInit() {\n  }\n  async onResetPassword(email){\n    console.log(email);\n    try {\n      await this.authService.resetPassword(email.value);\n      this.router.navigate(['/login']);\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user.interface';\nimport { AngularFireAuth} from '@angular/fire/auth';\nimport auth from 'firebase/app';\n\nimport {AngularFirestore,AngularFirestoreDocument} from '@angular/fire/firestore'\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user$:Observable<User>;\n\n  constructor(public afaAuth:AngularFireAuth, private afs:AngularFirestore) { \n    this.user$ = this.afaAuth.authState.pipe(\n      switchMap((user) => {\n        if(user){\n          this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        }\n        return of(null);\n      })\n    );\n  }\n\n  async loginGoogle():Promise<User>{\n    try {\n      const {user} = await this.afaAuth.signInWithPopup(new auth.auth.GoogleAuthProvider());\n      return user;\n    } catch (error) {\n      console.log('error ',error);\n    }\n\n  }\n\n  async resetPassword(email:string):Promise<void>{\n      \n    try {\n      return this.afaAuth.sendPasswordResetEmail(email);   \n    } catch (error) {\n      console.log('error ',error);\n    }\n  }\n\n  \n  async login(email:string,password:string):Promise<User>{\n    try {\n      const {user}= await this.afaAuth.signInWithEmailAndPassword(email,password);\n      this.updateUserData(user);\n      return user;\n    } catch (error) {\n      console.log('Error -> ',error);\n    }\n\n  }\n  async register(email: string, password: string): Promise<User> {\n    try {\n      const { user } = await this.afaAuth.createUserWithEmailAndPassword(email, password);\n      await this.sendVerificationEmail();\n      return user;\n    } catch (error) {\n      console.log('Error->', error);\n    }\n  }\n  async sendVerificationEmail():Promise<void>{\n    try {\n      return (await this.afaAuth.currentUser).sendEmailVerification();\n    } catch (error) {\n      console.log('Error ', error);\n    }\n    \n\n  }\n  isEmailVerified(user: User):boolean{\n    return user.emailVerified === true ? true : false;\n  }\n  async logout():Promise<void>{\n    try {\n      await this.afaAuth.signOut();\n      \n    } catch (error) {\n      console.log('Error ->',error);\n    }\n\n  }\n  private updateUserData(user:User){\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`);\n    const data:User = {\n      uid:user.uid,\n      email:user.email,\n      emailVerified:user.emailVerified,\n      displayName:user.displayName,\n    };\n    return userRef.set(data, {merge:true});\n  }\n}\n\n"]}