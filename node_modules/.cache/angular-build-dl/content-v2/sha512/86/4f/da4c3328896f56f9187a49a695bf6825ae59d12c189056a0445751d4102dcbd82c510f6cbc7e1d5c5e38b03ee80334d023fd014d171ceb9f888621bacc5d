{"version":3,"sources":["./src/app/components/login/login.page.html","./src/app/components/login/login-routing.module.ts","./src/app/components/login/login.module.ts","./src/app/components/login/login.page.scss","./src/app/components/login/login.page.ts","./src/app/services/notificaciones.service.ts"],"names":[],"mappings":"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","file":"components-login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Login</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card>\\n        <div class=\\\"login-logo\\\">\\n            <img src=\\\"assets/img/logo.png\\\" alt=\\\"Ionic logo\\\">\\n        </div>\\n        <form>\\n            <ion-item lines=\\\"full\\\">\\n                <ion-label position=\\\"floating\\\">Email</ion-label>\\n                <ion-input type=\\\"text\\\" #email required></ion-input>\\n            </ion-item>\\n            <ion-item lines=\\\"full\\\">\\n                <ion-label position=\\\"floating\\\">Password</ion-label>\\n                <ion-input type=\\\"password\\\" #password required></ion-input>\\n            </ion-item>\\n            <ion-row>\\n                <ion-col>\\n                    <ion-button type=\\\"submit\\\" (click)=\\\"onLogin(email, password)\\\" expand=\\\"block\\\">Login</ion-button>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row>\\n                <ion-col>\\n                    <p class=\\\"ion-text-end\\\">\\n                        <a routerLink=\\\"/forgot-password\\\">Olvidaste tu constrasena? </a>\\n                    </p>\\n                </ion-col>\\n            </ion-row>\\n            <span class=\\\"center-span\\\"> or </span>\\n            <ion-row>\\n                <ion-col>\\n                    <ion-button type=\\\"submit\\\" color=\\\"danger\\\" (click)=\\\"onLoginGoogle()\\\" expand=\\\"block\\\">Login with Google\\n                    </ion-button>\\n                </ion-col>\\n            </ion-row>\\n        </form>\\n        <ion-row>\\n            <ion-col>\\n                <p class=\\\"ion-text-end\\\">\\n                    <a routerLink=\\\"/register\\\">Crea una cuenta.. </a>\\n                </p>\\n            </ion-col>\\n        </ion-row>\\n    </ion-card>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { async } from '@angular/core/testing';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { NotificacionesService } from 'src/app/services/notificaciones.service';\nimport { User } from 'src/app/shared/user.interface';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private authSvc:AuthService, private router:Router, private notificationService:NotificacionesService,private route: ActivatedRoute,) { }\n\n  ngOnInit() {\n  }\n  async onLogin(email,password){\n    try {\n      const user = await this.authSvc.login(email.value,password.value);\n      if(user){\n        //Todo:checkEmail\n        const isVerified = this.authSvc.isEmailVerified(user);\n        this.redirectUser(isVerified,user);\n               \n      }\n    } catch (error) {\n      console.log('errror',error);\n    }\n  }\n\n    async onLoginGoogle(){\n      try {\n        const user = await this.authSvc.loginGoogle();\n        if(user){\n          //console.log(\"USER  -> \",user);\n          const isVerified = this.authSvc.isEmailVerified(user);\n          this.redirectUser(isVerified,user);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    private redirectUser(isVerified:boolean,user:User){\n      /// redirect -> view client\n      ///ELSE verified your email\n      if(isVerified){\n        console.log(\"UID GOOGLE\",user.uid);\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        uid: user.uid, \n      }\n    };\n\n    this.router.navigate(['view-cliente'], navigationExtras);\n\n     }else{\n       this.router.navigate(['verify-email']); \n    } \n\n    }\n  \n\n}\n\n","import { Injectable } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionesService {\n\n  constructor(public toastController: ToastController,\n    public alertController: AlertController\n) { }\nasync notificacionToast(text: string){\n  const toast = await this.toastController.create({\n    message: text,\n    duration: 2000\n  });\n  toast.present();\n}\n\nasync confirmacion(header: string, message: string, funcion?) {\n  const alert = await this.alertController.create({\n    cssClass: 'my-custom-class',\n    header: header,\n    message: message,\n    buttons: [\n      {\n        text: 'Cancelar',\n        role: 'cancel',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          \n        }\n      }, {\n        text: 'Aceptar',\n        role: 'ok',\n        handler: () => {\n          funcion();\n        }\n      }\n    ]\n  });\n\n  await alert.present();\n}\n\n}\n"],"sourceRoot":"webpack:///"}