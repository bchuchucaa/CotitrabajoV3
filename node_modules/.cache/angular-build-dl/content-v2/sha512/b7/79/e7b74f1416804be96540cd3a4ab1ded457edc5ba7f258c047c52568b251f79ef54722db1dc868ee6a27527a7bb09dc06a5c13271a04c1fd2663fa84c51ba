{"version":3,"sources":["webpack:///src/app/components/register/register.page.html","webpack:///src/app/components/register/register-routing.module.ts","webpack:///src/app/components/register/register.module.ts","webpack:///src/app/components/register/register.page.scss","webpack:///src/app/components/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","authSvc","router","email","password","register","value","user","console","log","isVerified","isEmailVerified","redirectUser","navigationExtras","queryParams","uid","navigate","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAT9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,2DAAD;AAPN,OAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFE,YAAY;AAEvB,8BAAoBC,OAApB,EAAgDC,MAAhD,EAA+D;AAAA;;AAA3C,eAAAD,OAAA,GAAAA,OAAA;AAA4B,eAAAC,MAAA,GAAAA,MAAA;AAAkB;;AAF3C;AAAA;AAAA,qCAIZ,CACV;AALsB;AAAA;AAAA,qCAONC,KAPM,EAOCC,QAPD,EAOS;;;;;;;;;AAEhB,6BAAM,KAAKH,OAAL,CAAaI,QAAb,CAAsBF,KAAK,CAACG,KAA5B,EAAkCF,QAAQ,CAACE,KAA3C,CAAN;;;AAAPC,0B;;AACN,0BAAGA,IAAH,EAAQ;AACN;AACAC,+BAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACMG,kCAHA,GAGa,KAAKT,OAAL,CAAaU,eAAb,CAA6BJ,IAA7B,CAHb;AAIN,6BAAKK,YAAL,CAAkBF,UAAlB,EAA6BH,IAA7B,EAJM,CAKN;AAGD;;;;;;;;AAEDC,6BAAO,CAACC,GAAR;;;;;;;;;AAGF;AAvBsB;AAAA;AAAA,uCAwBFC,UAxBE,EAwBiBH,IAxBjB,EAwB0B;AAC/C;AACA;AACA,gBAAGG,UAAH,EAAc;AAChB,kBAAIG,gBAAgB,GAAqB;AACvCC,2BAAW,EAAE;AACXC,qBAAG,EAAER,IAAI,CAACQ;AADC;AAD0B,eAAzC;AAMA,mBAAKb,MAAL,CAAYc,QAAZ,CAAqB,CAAC,eAAD,CAArB,EAAwCH,gBAAxC;AAEE,aATA,MASI;AACH,mBAAKX,MAAL,CAAYc,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACF;AAEA;AAxCsB;;AAAA;AAAA,S;;;;gBAPhB;;gBAFkB;;;;AASdhB,kBAAY,6DALxB,gEAAU;AACTiB,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,6GAFS;;;;AAAA,OAAV,CAKwB,GAAZlB,YAAY,CAAZ","file":"components-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Registrate</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"login-logo\\\">\\n        <img src=\\\"assets/img/logo.png\\\" alt=\\\"Ionic logo\\\">\\n    </div>\\n    <div class=\\\"register\\\">\\n        <ion-card>\\n            <ion-card-header>\\n                <ion-card-subtitle>Registrate</ion-card-subtitle>\\n                <ion-card-title>Tus datos</ion-card-title>\\n            </ion-card-header>\\n            <form>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">Email</ion-label>\\n                    <ion-input type=\\\"text\\\" #email required></ion-input>\\n                </ion-item>\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label position=\\\"floating\\\">Password</ion-label>\\n                    <ion-input type=\\\"password\\\" #password required></ion-input>\\n                </ion-item>\\n                <ion-row>\\n                    <ion-col>\\n                        <ion-button type=\\\"submit\\\" (click)=\\\"onRegister(email, password)\\\" expand=\\\"block\\\">Register</ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </form>\\n            <ion-row>\\n                <ion-col>\\n                    <p>\\n                        <a routerLink=\\\"/login\\\">Already have an account? </a>\\n                    </p>\\n                </ion-col>\\n            </ion-row>\\n        </ion-card>\\n    </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".register {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXIge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { User } from 'src/app/shared/user.interface';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  constructor(private authSvc:AuthService,private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  async onRegister(email, password){\n   try {\n     const user = await this.authSvc.register(email.value,password.value);\n     if(user){\n       //Check email verified\n       console.log('User' ,user);\n       const isVerified = this.authSvc.isEmailVerified(user);\n       this.redirectUser(isVerified,user);\n       //Todo: CheckEmail\n\n\n     }\n   } catch (error) {\n     console.log(error);\n   }\n\n  }\n  private redirectUser(isVerified:boolean,user:User){\n    /// redirect -> view client\n    ///ELSE verified your email\n    if(isVerified){\n  let navigationExtras: NavigationExtras = {\n    queryParams: {\n      uid: user.uid, \n    }\n  };\n\n  this.router.navigate(['/view-cliente'], navigationExtras);\n\n   }else{\n     this.router.navigate(['verify-email']); \n  } \n\n  }\n}\n"]}