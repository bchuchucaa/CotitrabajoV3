{"version":3,"sources":["webpack:///src/app/localizacion/localizacion.page.html","webpack:///src/app/localizacion/localizacion-routing.module.ts","webpack:///src/app/localizacion/localizacion.module.ts","webpack:///src/app/localizacion/localizacion.page.scss","webpack:///src/app/localizacion/localizacion.page.ts","webpack:///src/app/services/location.service.ts"],"names":["routes","path","component","LocalizacionPageRoutingModule","imports","forChild","exports","LocalizacionPageModule","forRoot","apiKey","declarations","LocalizacionPage","locationService","title","lat","lng","myVar","Array","current","latitude","longitude","address","newLocation","localizaciones","getSavedLocations","getCurrentLocation","getAddressOfLocation","subscribe","data","console","log","aux","event","saveDireccion","selector","template","LocationService","platform","afs","withAddress","location","Promise","resolve","reject","navigator","geolocation","options","frequency","timeout","enableHighAccuracy","getCurrentPosition","position","coords","geocoder","google","maps","Geocoder","latlng","geocode","results","status","undefined","formatted_address","error","localizacion","refObra","collection","uid","createId","doc","set","Object","assign","merge","valueChanges","providedIn"],"mappings":"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","file":"localizacion-localizacion-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>direcciones</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <h1>{{ title }}</h1>\\n\\n    <!-- this creates a google map on the page with the given lat/lng from -->\\n    <!-- the component as the initial center of the map: -->\\n    <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" (centerChange)=\\\"setNewLocation($event)\\\">\\n        <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [iconUrl]=\\\"'https://cdn4.iconfinder.com/data/icons/essential-app-2/16/botton-on-launch-point-48.png'\\\">\\n            <agm-info-window>UPS</agm-info-window>\\n\\n        </agm-marker>\\n\\n\\n        <agm-marker [latitude]=\\\"current.latitude\\\" [longitude]=\\\"current.longitude\\\" [iconUrl]=\\\"'https://cdn4.iconfinder.com/data/icons/essential-app-2/16/botton-on-launch-point-48.png'\\\">\\n            <agm-info-window>{{current.address}}</agm-info-window>\\n\\n        </agm-marker>\\n\\n        <agm-marker [latitude]=\\\"newLocation.latitude\\\" [longitude]=\\\"newLocation.longitude\\\" [iconUrl]=\\\"'https://cdn2.iconfinder.com/data/icons/pointers-5/24/pointer-top-left-48.png'\\\">\\n            <agm-info-window>{{newLocation.address}}</agm-info-window>\\n\\n        </agm-marker>\\n        <ion-item *ngFor=\\\"let location of localizaciones | async\\\">\\n\\n            <agm-marker [latitude]=\\\"location.latitude\\\" [longitude]=\\\"location.longitude\\\" [iconUrl]=\\\"'https://cdn4.iconfinder.com/data/icons/e-commerce-icon-set/48/Bookmark_2-48.png'\\\">\\n                <agm-info-window>{{newLocation.address}}</agm-info-window>\\n\\n            </agm-marker>\\n        </ion-item>\\n\\n\\n\\n    </agm-map>\\n\\n    {{newLocation | json}}\\n\\n\\n</ion-content>\\n<footer>\\n    <div style=\\\"margin-left: 25%;\\\">\\n        <ion-button (click)=\\\"saveLocation()\\\" color=\\\"success\\\">Guardar</ion-button>\\n        <ion-button (click)=\\\"getSavedLocations()\\\" color=\\\"danger\\\">Cancelar</ion-button>\\n    </div>\\n</footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocalizacionPage } from './localizacion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocalizacionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocalizacionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocalizacionPageRoutingModule } from './localizacion-routing.module';\n\nimport { LocalizacionPage } from './localizacion.page';\nimport { AgmCoreModule } from '@agm/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocalizacionPageRoutingModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyC7lREbDALML3-f6Nj0lEwoFTMuWcmZdK4'\n    })\n  ],\n  declarations: [LocalizacionPage]\n})\nexport class LocalizacionPageModule {}\n","export default \"agm-map {\\n  height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9jYWxpemFjaW9uL2xvY2FsaXphY2lvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2NhbGl6YWNpb24vbG9jYWxpemFjaW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xuICAgIGhlaWdodDogMzAwcHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { LocationService } from '../services/location.service';\nimport { Localizacion } from '../model/localizacion';\nimport { Query } from '@firebase/firestore-types'\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-localizacion',\n  templateUrl: './localizacion.page.html',\n  styleUrls: ['./localizacion.page.scss'],\n})\nexport class LocalizacionPage implements OnInit {\n\n  title = 'My first AGM project';\n  lat = 51.678418;\n  lng = 7.809007;\n\n  localizaciones:Observable<any[]>;\n  myVar:Localizacion[] = new Array();\n\n\n  current = {\n    latitude: '',\n    longitude: '',\n    address: ''\n  }\n\n  newLocation = {\n    latitude: '',\n    longitude: '',\n    address: ''\n  }\n\n  constructor(private locationService: LocationService) {\n    this.localizaciones=this.locationService.getSavedLocations();  \n  }\n\n  async ngOnInit() {\n\n    this.current = await this.locationService.getCurrentLocation();\n    this.locationService.getAddressOfLocation(this.newLocation);\n    //this.localizaciones.forEach(q => this.locationService.getAddressOfLocation(q));\n  }\n  //IS DEPRECATED BY SCORPION\n  getSavedLocations(){\n    this.locationService.getSavedLocations().subscribe(data =>{\n     console.log(data)\n      const aux:any=data;\n      this.locationService.getAddressOfLocation(aux[0]);\n      \n    });\n  \n  }\n\n  setNewLocation(event) {\n    if (event) {\n      this.newLocation.latitude = event.lat;\n      this.newLocation.longitude = event.lng;\n      this.locationService.getAddressOfLocation(this.newLocation);\n    }\n  }\n\n\n  saveLocation() {\n    console.log('enviado a guardar');\n    this.locationService.saveDireccion(this.newLocation);\n  }\n  logInFacebook(){\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Localizacion } from '../model/localizacion';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor(private platform: Platform,public afs:AngularFirestore) { }\n\n\n  async getCurrentLocation(withAddress: boolean = true): Promise<any> {\n    let location: any = {};\n\n    return new Promise((resolve, reject) => {\n    if (navigator.geolocation) {\n      var options = {\n        frequency: 1000,\n        timeout: 15000,\n        enableHighAccuracy: true\n      };\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          location.latitude = position.coords.latitude;\n          location.longitude = position.coords.longitude;\n          if (withAddress) {\n            let geocoder = new google.maps.Geocoder();\n            let latlng = { lat: location.latitude, lng: location.longitude };\n            geocoder.geocode({ location: latlng }, (results, status) => {\n              if (results != null && results != undefined) {\n                location.address = results[0].formatted_address;\n              } //end if\n              resolve(location);\n            });\n          } else {\n            resolve(location);\n          } //end if\n        },\n        error => {\n          resolve(null);\n        },\n        options\n      );\n    } //end if\n  });\n  } \n\n  async getAddressOfLocation(location: any) {\n    let geocoder = new google.maps.Geocoder();\n    let latlng = { lat: location.latitude, lng: location.longitude };\n    geocoder.geocode({ location: latlng }, (results, status) => {\n      if (results != null) {\n        location.address = results[0].formatted_address;\n        return location.address;\n      } \n    });\n  } \n  async saveDireccion(localizacion: any){\n    console.log(localizacion.latitude)\n    console.log('Direccion a guardar');\n    console.log(localizacion.address);\n    const refObra = this.afs.collection(\"localizaciones\");\n    if(localizacion.uid==null){\n      localizacion.uid=this.afs.createId();\n    }\n    refObra.doc(localizacion.uid).set(Object.assign({},localizacion),{merge: true})\n  }\n\n\n\n\n  getSavedLocations():Observable<any>{\n    console.log('TRYING TO GET SAVED LOCATIONS');\n    return this.afs.collection(\"localizaciones\").valueChanges();\n  }\n \n\n\n}\n"]}